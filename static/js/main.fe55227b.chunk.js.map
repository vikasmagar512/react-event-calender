{"version":3,"sources":["components/Events/index.js","components/DayNames/index.js","components/Day/index.js","components/Week/index.js","components/Calendar/index.js","App.js","serviceWorker.js","index.js"],"names":["Events","selectedDay","selectedMonthEvents","removeEvent","monthEventsRendered","map","event","i","key","title","className","onClick","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","date","format","dayEventsRendered","length","isSame","push","DayNames","Day","day","selected","select","isToday","isCurrentMonth","hasEvents","number","Week","currentMonthView","monthEvents","days","dayHasEvents","j","name","substring","month","Date","clone","add","Calendar","props","state","selectedMonth","moment","startOf","showEvents","previous","bind","next","addEvent","showCalendar","goToCurrentMonthView","initialiseEvents","this","setState","subtract","currentSelectedDay","weeks","done","previousCurrentNextView","count","monthIndex","currentSelectedDate","newEvents","eventTitle","prompt","alert","newEvent","dynamic","isAfterDay","isAfter","handleAdd","window","confirm","slice","index","splice","allEvents","event1","event2","event3","event4","event5","event6","event7","event8","event9","event10","class","id","renderDayLabel","renderTodayLabel","renderMonthLabel","renderWeeks","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe55227b.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'; // ES6\r\n\r\nconst Events = ({selectedDay,selectedMonthEvents,removeEvent})=>{\r\n  \r\n      const monthEventsRendered = selectedMonthEvents.map((event, i) => {\r\n        return (\r\n          <div\r\n            key={event.title}\r\n            className=\"event-container\"\r\n            onClick={() => removeEvent(i)}\r\n          >\r\n            <ReactCSSTransitionGroup\r\n              component=\"div\"\r\n              className=\"animated-time\"\r\n              transitionName=\"time\"\r\n              transitionAppear={true}\r\n              transitionAppearTimeout={500}\r\n              transitionEnterTimeout={500}\r\n              transitionLeaveTimeout={500}\r\n            >\r\n              <div className=\"event-time event-attribute\">\r\n                {event.date.format(\"HH:mm\")}\r\n              </div>\r\n            </ReactCSSTransitionGroup>\r\n            <ReactCSSTransitionGroup\r\n              component=\"div\"\r\n              className=\"animated-title\"\r\n              transitionName=\"title\"\r\n              transitionAppear={true}\r\n              transitionAppearTimeout={500}\r\n              transitionEnterTimeout={500}\r\n              transitionLeaveTimeout={500}\r\n            >\r\n              <div className=\"event-title event-attribute\">{event.title}</div>\r\n            </ReactCSSTransitionGroup>\r\n          </div>\r\n        );\r\n      });\r\n  \r\n      const dayEventsRendered = [];\r\n  \r\n      for (var i = 0; i < monthEventsRendered.length; i++) {\r\n        if (selectedMonthEvents[i].date.isSame(selectedDay, \"day\")) {\r\n          dayEventsRendered.push(monthEventsRendered[i]);\r\n        }\r\n      }\r\n  \r\n      return (\r\n        <div className=\"day-events\">\r\n          {dayEventsRendered.length ? dayEventsRendered : (<p>No Events</p>)}\r\n        </div>\r\n      );\r\n    }\r\n\r\n  export default Events","import React from 'react'\r\nconst DayNames = () =>\r\n  <div className=\"row days-header\">\r\n    <span className=\"box day-name\">Mon</span>\r\n    <span className=\"box day-name\">Tue</span>\r\n    <span className=\"box day-name\">Wed</span>\r\n    <span className=\"box day-name\">Thu</span>\r\n    <span className=\"box day-name\">Fri</span>\r\n    <span className=\"box day-name\">Sat</span>\r\n    <span className=\"box day-name\">Sun</span>\r\n  </div>\r\nexport default DayNames","import React from 'react'\r\nconst Day = ({day, selected, select}) =>\r\n  <div\r\n    className={\r\n      \"day\" +\r\n      (day.isToday ? \" today\" : \"\") +\r\n      (day.isCurrentMonth ? \"\" : \" different-month\") +\r\n      (day.date.isSame(selected) ? \" selected\" : \"\") +\r\n      (day.hasEvents ? \" has-events\" : \"\")\r\n    }\r\n    onClick={() => select(day)}\r\n  >\r\n    <div className=\"day-number\">{day.number}</div>\r\n  </div>\r\n  export default Day","import React from 'react'\r\nimport Day from '../Day'\r\nconst Week = ({date,\r\n  currentMonthView,\r\n  selected,\r\n  select,\r\n  monthEvents}) => {\r\n      let days = [];  \r\n      for (var i = 0; i < 7; i++) {\r\n        var dayHasEvents = false;\r\n  \r\n        for (var j = 0; j < monthEvents.length; j++) {\r\n          if (monthEvents[j].date.isSame(date, \"day\")) {\r\n            dayHasEvents = true;\r\n          }\r\n        }\r\n  \r\n        let day = {\r\n          name: date.format(\"dd\").substring(0, 1),\r\n          number: date.date(),\r\n          isCurrentMonth: date.month() === currentMonthView.month(),\r\n          isToday: date.isSame(new Date(), \"day\"),\r\n          date: date,\r\n          hasEvents: dayHasEvents\r\n        };\r\n  \r\n        days.push(<Day day={day} selected={selected} select={select} />);\r\n        date = date.clone();\r\n        date.add(1, \"d\");\r\n      }\r\n      return (\r\n        <div className=\"row week\">\r\n          {days}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  export default Week","import React, { Component } from 'react'\nimport moment from 'moment'\nimport './index.scss'\nimport Events from '../Events'\nimport DayNames from '../DayNames'\nimport Week from '../Week'\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedMonth: moment(),\n      selectedDay: moment().startOf(\"day\"),\n      selectedMonthEvents: [],\n      showEvents: false\n    };\n\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n    this.addEvent = this.addEvent.bind(this);\n    this.showCalendar = this.showCalendar.bind(this);\n    this.goToCurrentMonthView = this.goToCurrentMonthView.bind(this);\n\n    this.initialiseEvents();\n  }\n\n  previous() {\n    const currentMonthView = this.state.selectedMonth;\n\n    this.setState({\n      selectedMonth: currentMonthView.subtract(1, \"month\")\n    });\n  }\n\n  next() {\n    const currentMonthView = this.state.selectedMonth;\n    this.setState({\n      selectedMonth: currentMonthView.add(1, \"month\")\n    });\n  }\n\n  select(day) {\n    this.setState({\n      selectedMonth: day.date,\n      selectedDay: day.date.clone(),\n      showEvents: true\n    });\n  }\n\n  goToCurrentMonthView(){\n    this.setState({\n      selectedMonth: moment()\n    });\n  }\n  \n  showCalendar() {\n    this.setState({\n      selectedMonth: this.state.selectedMonth,\n      selectedDay: this.state.selectedDay,\n      showEvents: false\n    });\n  }\n\n  renderMonthLabel() {\n    const currentMonthView = this.state.selectedMonth;\n    return (\n      <span className=\"box month-label\">\n        {currentMonthView.format(\"MMMM YYYY\")}\n      </span>\n    );\n  }\n\n  renderDayLabel() {\n    const currentSelectedDay = this.state.selectedDay;\n    return (\n      <span className=\"box month-label\">\n        {currentSelectedDay.format(\"DD MMMM YYYY\")}\n      </span>\n    );\n  }\n  \n  renderTodayLabel() {\n    return (\n      <span className=\"box today-label\" onClick={this.goToCurrentMonthView}>\n        Today\n      </span>\n    );\n  }\n  \n  renderWeeks() {\n    const currentMonthView = this.state.selectedMonth;\n    const currentSelectedDay = this.state.selectedDay;\n    const monthEvents = this.state.selectedMonthEvents;\n\n    let weeks = [];\n    let done = false;\n    let previousCurrentNextView = currentMonthView\n      .clone()\n      .startOf(\"month\")\n      .subtract(1, \"d\")\n      .day(\"Monday\");\n    let count = 0;\n    let monthIndex = previousCurrentNextView.month();\n\n    while (!done) {\n      weeks.push(\n        <Week\n          date={previousCurrentNextView.clone()}\n          currentMonthView={currentMonthView}\n          monthEvents={monthEvents}\n          selected={currentSelectedDay}\n          select={day => this.select(day)}\n        />\n      );\n      previousCurrentNextView.add(1, \"w\");\n      done = count++ > 2 && monthIndex !== previousCurrentNextView.month();\n      monthIndex = previousCurrentNextView.month();\n    }\n    return weeks;\n  }\n\n  handleAdd() {\n    const monthEvents = this.state.selectedMonthEvents;\n    const currentSelectedDate = this.state.selectedDay;\n\n    let newEvents = [];\n\n    var eventTitle = prompt(\"Please enter a name for your event: \");\n\n    switch (eventTitle) {\n      case \"\":\n        alert(\"Event name cannot be empty.\");\n        break;\n      case null:\n        alert(\"Changed your mind? You can add one later!\");\n        break;\n      default:\n        var newEvent = {\n          title: eventTitle,\n          date: currentSelectedDate,\n          dynamic: true\n        };\n\n        newEvents.push(newEvent);\n\n        for (var i = 0; i < newEvents.length; i++) {\n          monthEvents.push(newEvents[i]);\n        }\n\n        this.setState({\n          selectedMonthEvents: monthEvents\n        });\n        break;\n    }\n  }\n\n  addEvent() {\n    const currentSelectedDate = this.state.selectedDay;\n    let isAfterDay = moment().startOf(\"day\").subtract(1, \"d\");\n\n    if (currentSelectedDate.isAfter(isAfterDay)) {\n      this.handleAdd();\n    } else {\n      if (window.confirm(\"Are you sure you want to add an event in the past?\")) {\n        this.handleAdd();\n      } else {\n      } // end confirm past\n    } //end is in the past\n  }\n\n  removeEvent(i) {\n    const monthEvents = this.state.selectedMonthEvents.slice();\n\n    if (window.confirm(\"Are you sure you want to remove this event?\")) {\n      let index = i;\n\n      if (index !== -1) {\n        monthEvents.splice(index, 1);\n      } else {\n        alert(\"No events to remove on this day!\");\n      }\n\n      this.setState({\n        selectedMonthEvents: monthEvents\n      });\n    }\n  }\n\n  initialiseEvents() {\n    const monthEvents = this.state.selectedMonthEvents;\n\n    let allEvents = [];\n\n    var event1 = {\n      title:\n        \"Press the Add button and enter a name for your event. P.S you can delete me by pressing me!\",\n      date: moment(),\n      dynamic: false\n    };\n\n    var event2 = {\n      title: \"Event 2 - Meeting\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(2, \"h\"),\n      dynamic: false\n    };\n\n    var event3 = {\n      title: \"Event 3 - Cinema\",\n      date: moment().startOf(\"day\").subtract(7, \"d\").add(18, \"h\"),\n      dynamic: false\n    };\n\n    var event4 = {\n      title: \"Event 4 - Theater\",\n      date: moment().startOf(\"day\").subtract(16, \"d\").add(20, \"h\"),\n      dynamic: false\n    };\n\n    var event5 = {\n      title: \"Event 5 - Drinks\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(12, \"h\"),\n      dynamic: false\n    };\n\n    var event6 = {\n      title: \"Event 6 - Diving\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(13, \"h\"),\n      dynamic: false\n    };\n\n    var event7 = {\n      title: \"Event 7 - Tennis\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(14, \"h\"),\n      dynamic: false\n    };\n\n    var event8 = {\n      title: \"Event 8 - Swimmming\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(17, \"h\"),\n      dynamic: false\n    };\n\n    var event9 = {\n      title: \"Event 9 - Chilling\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(16, \"h\"),\n      dynamic: false\n    };\n    \n        var event10 = {\n      title:\n        \"Hello World\",\n      date: moment().startOf(\"day\").add(5, \"h\"),\n      dynamic: false\n    };\n\n    allEvents.push(event1);\n    allEvents.push(event2);\n    allEvents.push(event3);\n    allEvents.push(event4);\n    allEvents.push(event5);\n    allEvents.push(event6);\n    allEvents.push(event7);\n    allEvents.push(event8);\n    allEvents.push(event9);\n    allEvents.push(event10);\n\n    for (var i = 0; i < allEvents.length; i++) {\n      monthEvents.push(allEvents[i]);\n    }\n\n    this.setState({\n      selectedMonthEvents: monthEvents\n    });\n  }\n\n  render() {\n    const showEvents = this.state.showEvents;\n    return (<div class=\"calendar-rectangle\">\n      <div id=\"calendar-content\" class=\"calendar-content\">\n        {showEvents ? \n          <section className=\"main-calendar\">\n          <header className=\"calendar-header\">\n            <div className=\"row title-header\">\n              {this.renderDayLabel()}\n            </div>\n            <div className=\"row button-container\">\n              <i\n                className=\"box arrow fa fa-angle-left\"\n                onClick={this.showCalendar}\n              />\n              <i\n                className=\"box event-button fa fa-plus-square\"\n                onClick={this.addEvent}\n              />\n            </div>\n          </header>\n          <Events\n            selectedDay={this.state.selectedDay}\n            selectedMonthEvents={this.state.selectedMonthEvents}\n            removeEvent={i => this.removeEvent(i)}\n          />\n        </section>\n        :\n          <section className=\"main-calendar\">\n            <header className=\"calendar-header\">\n              <div className=\"row title-header\">\n                <i\n                  className=\"box arrow fa fa-angle-left\"\n                  onClick={this.previous}\n                />\n                <div className=\"box header-text\">\n                {this.renderTodayLabel()}\n                {this.renderMonthLabel()}\n                </div>\n                <i className=\"box arrow fa fa-angle-right\" onClick={this.next} />\n              </div>\n              <DayNames />\n            </header>\n            <div className=\"days-container\">\n              {this.renderWeeks()}\n            </div>\n          </section>\n        }\n      </div>\n    </div>)\n  }\n}\n\nexport default Calendar","import React from 'react';\nimport './App.css';\nimport Calendar from './components/Calendar'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}